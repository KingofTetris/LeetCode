package 十大排序.十大排序通用模板;

/**
 * @author by KingOfTetris
 * @date 2022/9/6
 */
public class Shell<T extends Comparable<T>> extends Sort<T> {

    /**
     * 希尔排序是插入排序的升级版
     * 对于大规模的数组，插入排序很慢，
     * 因为它只能交换相邻的元素，每次只能将逆序数量减少 1。
     * 希尔排序的出现就是为了解决插入排序的这种局限性，它通过交换不相邻的元素，每次可以将逆序数量减少大于 1。
     *
     * 希尔排序使用插入排序对间隔 h 的序列进行排序。通过不断减小 h，最后令 h=1，就可以使得整个数组是有序的。
     *
     * 希尔排序可以说是插入排序的一种变种。无论是插入排序还是冒泡排序，
     * 如果数组的最大值刚好是在第一位，要将它挪到正确的位置就需要 n - 1 次移动。
     * 也就是说，原数组的一个元素如果距离它正确的位置很远的话，
     * 则需要与相邻元素交换很多次才能到达正确的位置，这样是相对比较花时间了。
     *
     * 希尔排序就是为了加快速度简单地改进了插入排序，交换不相邻的元素以对数组的局部进行排序。
     * @param nums
     */
    @Override
    public void sort(T[] nums) {

        int N = nums.length;
        int h = 1;

        while (h < N / 3) { //一般取为比 N/3 大一点的h就行
            h = 3 * h + 1; // 1, 4, 13, 40, ...
        }

        while (h >= 1) { //让 h < 1就结束排序了
            for (int i = h; i < N; i++) {
                for (int j = i; j >= h && less(nums[j], nums[j - h]); j -= h) {
                    swap(nums, j, j - h);
                }
            }
            h = h / 3;
        }

    }
}
